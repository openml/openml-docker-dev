# OpenML dev docker-compose
# For local dev environment setup
# *Insecure & Not for Production Setup*

# Notes:
# issues: Rui Quintino,https://github.com/rquintino
# config folder is used to share some config keys after init between containers
# $ needs escaping to $$ in docker_compose file, $api_key is then $$api_key
# TODO: gollum not working, CORS issue, needs apache mapping, local gollum install on website container?
# OpenML main repo is mapped as volume, not copied within the built images, for enable development
   
version: '2'

services:
  # MySQL dbs
  mysql:
   image: mysql:5.7.25
   container_name: mysql_test
   platform: linux/x86_64
   ports:
     # <Port exposed> : < MySQL Port running inside container>
     - '3307:3306'
   command: mysqld --default-authentication-plugin=mysql_native_password
   build: ./mysql
   environment:
     MYSQL_ROOT_PASSWORD: ""
     MYSQL_DATABASE: openml



  website_new:
    build: openml.org
    ports:
      - "5000:5000"
    links:
      - mysql

    depends_on:
      - mysql
      - elasticsearch


  # Elastic search indexes
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:6.8.2
    build: ./elasticsearch
    command: elasticsearch
    ports:
      - "9200:9200"
      - "9300:9300"

#   Php frontend
  website:
    build: ./website
    ports:
      - 80:80
    volumes:
      - ./config:/openmlconfig
      - ./OpenML:/var/www/html
    depends_on:
      - mysql
      - elasticsearch

  # MySQL admin UI (tool)
  phpmyadmin:
    image: phpmyadmin/phpmyadmin:latest
    volumes:
      - ./config:/openmlconfig
    ports:
      - 8080:80
    environment:
      - PMA_HOST=mysql
    depends_on:
      - mysql

  # OpenML Java background workers
  java:
    image: java
    volumes:
      - ./config:/openmlconfig
      - ./OpenML:/var/www/html

    # runs openml process_dataset java background task each 10 secs
    command: /bin/bash -c 'while sleep 10;do api_key=`cat /openmlconfig/api_key.txt`; echo "API key:$$api_key";  java -Xmx4G -jar /var/www/html/openml_OS/third_party/OpenML/Java/evaluate.jar -config "server = http://website/;api_key = $$api_key" -f process_dataset;done'
