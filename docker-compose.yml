# OpenML dev docker-compose
# For local dev environment setup
# *Insecure & Not for Production Setup*

# Notes:
# issues: Rui Quintino,https://github.com/rquintino
# config folder is used to share some config keys after init between containers
# $ needs escaping to $$ in docker_compose file, $api_key is then $$api_key
# TODO: gollum not working, CORS issue, needs apache mapping, local gollum install on website container?
# OpenML main repo is mapped as volume, not copied within the built images, for enable development

version: '2'

services:
  # MySQL dbs
  mysql:
    image: mysql:5.7.25
    container_name: mysql_test
    platform: linux/x86_64
    ports:
      # <Port exposed> : < MySQL Port running inside container>
      - '3307:3306'
    build: ./mysql
    environment:
      MYSQL_ROOT_PASSWORD: "test123"
      MYSQL_DATABASE: openml
    # volumes:
    #   - ./storage/mysql:/storage

  website_new:
    build:
      context: ./
      dockerfile: ./website-new/Dockerfile
      args:
        - sourceDirectory=portml-website
    ports:
      - "5000:5000"
    links:
      - mysql
    depends_on:
      - mysql
      - elasticsearch
    environment:
      - PYTHONUNBUFFERED=1

  # Elastic search indexes
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:6.8.2
    build: ./elasticsearch
    command: elasticsearch
    ports:
      - "9200:9200"
      - "9300:9300"
    volumes:
      - ./storage/es:/esdata

  #   Php frontend
  website:
    build:
      context: ./
      dockerfile: ./website/Dockerfile
    ports:
      - 80:80
    volumes:
      - ./config:/openmlconfig
      - ./storage/datastore:/datastore
      # - ./OpenML:/var/www/html
    depends_on:
      - mysql
      - elasticsearch
    environment:
      DB_NAME_OPENML: 'openml'
      DB_HOST_OPENML: "mysql_test"
      DB_USER_OPENML: 'root'
      DB_PASS_OPENML: 'test123'
      DB_NAME_EXPDB: 'openml_expdb'
      DB_HOST_EXPDB: "mysql_test"
      DB_USER_EXPDB_READ: 'root'
      DB_PASS_EXPDB_READ: 'test123'
      DB_USER_EXPDB_WRITE: 'root'
      DB_PASS_EXPDB_WRITE: 'test123'
      ES_URL: 'elasticsearch:9200'
      ES_PUBLIC_URL: 'localhost:9200'
      BASE_URL: 'http://localhost/'
      DATA_PATH: '/datastore/'
      DIRECTORY_PATH: '/var/www/html/'

  # MySQL admin UI (tool)
  phpmyadmin:
    image: phpmyadmin/phpmyadmin:latest
    volumes:
      - ./config:/openmlconfig
    ports:
      - 8080:80
    environment:
      - PMA_HOST=mysql
    depends_on:
      - mysql
  # OpenML Java background workers
  java:
    build: ./java
    image: java
    volumes:
      - ./config:/openmlconfig
      # - ./OpenML:/var/www/html
      - ./openmlsource/:/openmlsource
    entrypoint: /entrypoint.sh
    # runs openml process_dataset java background task each 10 secs
    # command: /bin/bash -c 'while sleep 10;do api_key=`cat /openmlconfig/api_key.txt`; echo "API key:$$api_key";  java -Xmx4G -jar /var/www/html/openml_OS/third_party/OpenML/Java/evaluate.jar -config "server = http://website/;api_key = $$api_key" -f process_dataset;done'
    # command: /bin/bash,-c,'while sleep 10;do api_key=`cat /openmlconfig/api_key.txt`; echo "API key:$$api_key";  java -Xmx4G -jar /openmlsource/Java/evaluate.jar -config "server = http://localhost/;api_key = $$api_key" -f process_dataset;done'
